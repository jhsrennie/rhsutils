DiskThrasher
============

Introduction
------------

Everybody would like a simple disk speed tester that tells you
whether your disk is fast, slow or medium. No such metric exists
because disk performance is too complex to be summarised in one
figure. However, provided you're prepared to accept that any single
figure is at best a guide and at worst misleading, here is my attempt
at a disk speed tester.

DiskThrasher combines sequential and random access and uses four
threads to simulate multiple users. Details, for anyone interested,
are given in appendix A. Non-nerds need just look at the average read
speed and average write speed. The figures are only meaningful when
you compare different disk systems, so I've included results from
DiskThrasher from a variety of different servers.

Using DiskThrasher
------------------

To use DiskThrasher just copy it to the drive you want to test, open a
command prompt and run DiskThrasher with no arguments. You need at
least 1GB free as DiskThrasher creates four files 256MB in size (and
deletes them when it's finished). DiskThrasher takes from 15 minutes
on a standard SATA disk to a couple of minutes on the latest SAS RAID
arrays.

Typical output from DiskThrasher looks like (this is from a Dell
PowerEdge 2900 with a 4 disk RAID5 on a Perc 5/i controller with
write back enabled):

   D:\>DiskThrasher
   DiskThrasher
   ============
   No. threads: 4
   No. blocks:  256
   Block size:  1048576

   Starting test at 15:18:09

   Creating thread 0
   Creating thread 1
   Creating thread 2
   Creating thread 3
   Waiting for threads to initialise ...
   Done

   Starting the test
   Test finished

   Test time:       147 seconds
   Blocks read:     20447, total read time:  522.380 seconds
   Blocks written:  11458, total write time: 43.505 seconds
   Av. read speed:  156.568 MB/sec
   Av. write speed: 1053.498 MB/sec
   Finished

The only interesting figures are the average read and write speed,
157MB/sec and 1053MB/sec respectively in the above example, and these
figures don't mean much on their own. However they are a guide as to
how your disks compare to other disk systems. I've included some
speeds I measured on a variety on servers.

DiskThrasher creates random data for the test, so there will be a bit
of variation from test to test. You should run the test three times
and average the figures, but at the end of the day remember it's just
a guideline.

Interpreting the results
------------------------

The main factors that affect disk speed are:

- the age of the disks: disks double in speed every few years

- the array type: whether it's RAID0, RAID1, RAID5 or just an
  unRAIDed disk

- whether writeback caching is enabled on the controller

Taking these in turn:

The oldest disks in the tests below are Atlas 10K V and Seagate
10K.7. These are 10K spin speed disks and are a few years old now.
The latest disks are 15K spin speed Fujitsus, and these are getting
on for a factor of two faster than the oldest disks. If there is a
difference between SAS and SCSI320 disks it is small compared to the
difference between old an new disks. (Non-RAIDed) SATA disks are
hideously slow in this test, as indeed they are in a real life
server!

I was going to include the release date of the disks being tested,
but that proved painful to obtain, so here's a rough guide:

Old disks: Atlas 10K V, Seagate ST373207LC, Fujitsu MAW3147NC

Medium disks: Seagate ST373355SS, Seagate ST3300555SS

New disks: Fujitsu MBA3073RC, Fujitsu MBA3147NC

RAID0 is the fastest array type. RAID5 is probably next fastest, and
RAID1 is the slowest. Having said that, there is an overhead with
RAID5 and depending on the disks used a 3 disk RAID5 may be little if
any quicker than a RAID1. However a 4 disk RAID5 will normally spank
a RAID1. (The more disks in a RAID array the faster it is, within
reason, as the controller can write to all the disks simultaneously.)

Write back caching makes the write speed meaningless, unless you
really believe (in the example above) the write speed is 1.053GB/sec.
Even with a test data size of 1GB, four times the usual controller
cache size, the cache dominates the write speed. This problem affects
all disk speed testers I've seen. You could interpret this as
indicating my test is pants, or you could conclude that on real
servers write speed isn't an issue and their performance is dominated
by their read speed.

The results
-----------

OK here are the results. These are all on Dell Poweredge servers
because we use exclusively Dells. I have access to about 100 servers
scattered across the UK, but I've resisted the temptation to test
them all and I've just done a representative sample. I've presented
the data in sections by the array type, which seems a reasonable a
way to group them. Speeds are in MB/sec.

RAID1 arrays                                         Read   Write

PE2800 2 x Seagate ST373207LC 10K SCSI320 Perc         61     767
4e/Di write back

Same as above with Fujitsu MBA3147NC 15K SCSI320      163     728


PE1950 2 x Seagate ST373355SS 15K SAS Perc 5/i         75    1500
write back

PE R200 2 x Fujitsu MBA3073RC 15K SAS Perc 6/iR       136      82
write through


RAID5 arrays                                         Read   Write

PE2800 3 x Quantum Atlas 10K V 10K SCSI320 Perc        85     275
4e/Di write back

PE2800 3 x Fujitsu MAW3147NC 10K SCSI320 Perc 4e/Di    98     396
write back

PE2900 3 x Seagate ST373355SS 15K SAS RAID5 Perc 5/i  109    1250
write back

Same as above 4 x Seagate ST3300555SS 15K SAS RAID5   163    1000
Perc 5/i write back

PE2900 3 x Seagate ST373455SS 15K SAS RAID5 Perc      167    1059
5/i write back

Same as above 5 x Fujitsu MAX3147RC 15K SAS RAID5     247     754
write back

PE2950 6 x Western Digital WD1000FYPS SATA RAID5      253     863
Perc 5/i write back

PE2900 4 x Western Digital WD1000FYPS SATA RAID5      170    1100
Perc 5/i write back

PE840 4 x Seagate ST3320620AS SATA RAID5 Perc 5/i     144    1400
write back - my home server


RAID0 arrays                                         Read   Write

PE 860 2 x Fujitsu MBA3073 15K SAS Perc 5i/R          162     155
write through


Non-RAID and SATA (ugh)                              Read   Write

PE440 single Seagate ST3250823AS SATA                  32      35
OK it's my workstation!

PE440 2 x Seagate ST3250823AS SATA software RAID1      60      41
My workstation again.


Comments
--------

The first two tests in the RAID1 section are interesting because they
use the same server and RAID controller to compare disks that are
some four years old (Seagate ST373207LC) with the latest 15K disks
(Fujitsu MBA3147NC). The new disks are more than twice the speed!

The current speed record is the Poweredge 2900 with 5 of the latest
15K SAS disks (MAX3147RC) as a RAID5. 247MB/sec read speed!

The Perc 5/iR and 6/iR controllers have no battery and use write
through caching. Their write speeds are much much lower than the
controllers that use write through caching.

I've included test results from servers that use SATA disks as a
RAID5, but on the latest Perc 5i controller with battery backed cache.
The results are actually pretty good, though not as good as SAS
disks.

The last section contains tests on my workstation, which uses SATA
disks connected to the on board SATA controller. I've tested a
standalone disk and also two disks configured as a software RAID1.
Surprisingly, and reproducibly, the RAID1 array has twice the read
speed of the standalone disk. I've heard it said that the software
RAID1 in Windows reads independently from both disks (obviously
writes have to be synchonised). Maybe the results indicate that it
does.


Appendix A
----------

DiskThrasher creates four threads that run the disk test
simultaneously. All four threads do the same thing so I'll describe
just one thread.

The thread creates a file 256MB in size and filled with random data.
It treats this file as made up from 256 1MB chunks, and it uses the
quicksort algorithm to sort the chunks into the order of the first
DWORD in each chunk. Only the quicksort is timed, not the initial
creation of the file.

The thread uses the high resolution timers to measure the time spent
actually reading and writing the data.

The quicksort algorithm does roughly twice as much reading as
writing. This weights the results towards the read speed, but then
most servers spend far more time servicing reads than writes.

Each 1MB chunk is read and written in one go (one call to ReadFile or
WriteFile) to simulate sequential access. The quicksort algorithm
reads chunks in semi-random order, and of course there are four
threads running simultaneously, so this simulates random access. The
balance between the two has been arrived at by a wholly unscientific
method of tweaking them until they seemed to give plausible results.

At the end of the test the total amount read and written and the
total read and write time is calculated, and the ratio gives the
average read and write speed. Using the example given at the
beginning of this file:

   Blocks read:     20447, total read time:  522.380 seconds

Each block is 1MB, so the speed is 20477/522 MB/sec or 39.17MB/sec.
However this is the average for the individual threads, so the
average for all four threads is four times this or 156.7MB/sec.

I've included the source code if you feel the urge to twaek the test
and recompile it.


John Rennie
john.rennie@ratsauce.co.uk
6th May 2008
